<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.reserve.mapper.StudentMapper">

    <resultMap type="com.example.reserve.entity.Student" id="StudentInfo">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nick_name" property="nickName"/>
        <result column="clazz_id" property="clazzId"/>
        <result column="sex" property="sex"/>
        <result column="mobile" property="mobile"/>
        <result column="create_date" property="createDate"/>
    </resultMap>

    <select id="queryList" resultMap="StudentInfo">
        SELECT *
        from s_student
        <where>
            <if test="username!=null">and username LIKE concat("%",#{username},"%")</if>
            <if test="clazzid!=null">and clazz_id LIKE concat("%",#{clazzid},"%")</if>
            <if test="studentid!=null">and id = #{studentid}</if>
        </where>
        limit #{startIndex},#{pagesize}
    </select>

    <select id="queryCount" resultType="int">
        select count(*) from s_student
        <where>
            <if test="username!=null">and username LIKE concat("%",#{username},"%")</if>
            <if test="clazzid!=null">and clazz_id LIKE concat("%",#{clazzid},"%")</if>
            <if test="studentid!=null">and id = #{studentid}</if>
        </where>
    </select>

    <insert id="addStudent" parameterType="com.example.reserve.entity.Student">
        insert into s_student(username,password,clazz_id,sex,mobile)
        values(#{username},#{password},#{clazzId},#{sex},#{mobile})
    </insert>

    <delete id="deleteStudent" parameterType="java.util.ArrayList">
        delete from s_student
        <where>
            id in
            <foreach collection="list" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </where>
    </delete>

    <update id="editStudent" parameterType="com.example.reserve.entity.Student">
        update s_student
        <set>
            <if test="nickName != null">
                nick_name = #{nickName},
            </if>
            <if test="clazzId != null">
                clazz_id = #{clazzId},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
        </set>
        where id = #{id}
    </update>


    <select id="findById" parameterType="int" resultType="com.example.reserve.entity.Student">
        select * from s_student where id = #{sid}
    </select>

    <select id="findByStudent" parameterType="com.example.reserve.entity.Student"
            resultType="com.example.reserve.entity.Student">
        select * from s_student where username = #{username} and password = #{password}
    </select>

    <select id="isStudentByClazzId" parameterType="long" resultMap="StudentInfo">
        select * from s_student where clazz_id = #{id}
    </select>

    <update id="editPswdByStudent" parameterType="com.example.reserve.entity.Student">
        update  s_student set password = #{password} where id = #{id}
    </update>

    <select id="findByName" parameterType="java.lang.String" resultType="int">
        select id from s_student where username = #{name}
    </select>

</mapper>